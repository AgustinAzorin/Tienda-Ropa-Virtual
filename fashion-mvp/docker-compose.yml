version: "3.9"

services:
  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    container_name: api
    env_file:
      - ./.env
      - ./apps/api/.env
    depends_on:
      - postgres
      - redis
      - minio
      - score
    ports:
      - "3000:3000"
    networks:
      - app-net

  score:
    build:
      context: ./apps/score
      dockerfile: Dockerfile
    container_name: score
    env_file:
      - ./.env
      - ./apps/score/.env
    ports:
      - "8000:8000"
    networks:
      - app-net

  postgres:
    image: postgres:16
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: fashion
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-net

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-net

  minio:
    image: minio/minio:RELEASE.2024-06-13T22-53-53Z
    container_name: minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    ports:
      - "9000:9000"  # S3 API
      - "9001:9001"  # consola web
    volumes:
      - minio_data:/data
    networks:
      - app-net

  nginx:
    image: nginx:1.25-alpine
    container_name: nginx
    volumes:
      - ./infra/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - api
      - score
    ports:
      - "8080:80"
    networks:
      - app-net

volumes:
  pgdata:
  minio_data:

networks:
  app-net:
    driver: bridge
